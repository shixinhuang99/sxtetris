# name: CI

# on:
#   workflow_dispatch:
#   pull_request:
#   push:
#     branches:
#       - main

# env:
#   CARGO_TERM_COLOR: always
#   CARGO_INCREMENTAL: 0

# jobs:
#   check:
#     runs-on: ${{ matrix.os }}
#     name: check (${{ matrix.os }})

#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - os: ubuntu-latest
#           - os: windows-latest

#     steps:
#       - uses: actions/checkout@v4

#       - uses: dtolnay/rust-toolchain@stable

#       - uses: Swatinem/rust-cache@v2
#         with:
#           shared-key: ${{ runner.os }}

#       - name: Use rust nightly
#         run: cargo --version

#       - uses: taiki-e/install-action@v2
#         with:
#           tool: just,taplo-cli

#       - name: Run check
#         run: just check

#   tests:
#     needs: check
#     runs-on: ${{ matrix.os }}
#     name: tests (${{ matrix.target }})

#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - os: macos-latest
#             target: x86_64-apple-darwin
#             test: true
#           - os: macos-latest
#             target: aarch64-apple-darwin
#           - os: ubuntu-latest
#             target: x86_64-unknown-linux-gnu
#             test: true
#           - os: ubuntu-latest
#             target: aarch64-unknown-linux-gnu
#             cross: true
#           - os: windows-latest
#             target: x86_64-pc-windows-msvc
#             test: true

#     steps:
#       - uses: actions/checkout@v4

#       - uses: Swatinem/rust-cache@v2
#         with:
#           shared-key: ${{ runner.os }}

#       - uses: taiki-e/install-action@v2
#         if: matrix.cross
#         with:
#           tool: cross

#       - name: Test code
#         if: matrix.test
#         run: |
#           rustup target add ${{ matrix.target }}
#           cargo test --target ${{ matrix.target }} --all-features

#       - name: Test cargo build
#         if: matrix.test == '' && matrix.cross == ''
#         run: |
#           rustup target add ${{ matrix.target }}
#           cargo build --target ${{ matrix.target }} --all-features

#       - name: Test cross build
#         if: matrix.cross
#         run: |
#           cross build --target ${{ matrix.target }} --all-features
